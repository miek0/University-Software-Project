/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import java.sql.ResultSet;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import universitysoftware.Course;
import universitysoftware.DBmanager;
import universitysoftware.Section;
import universitysoftware.Student;

/**
 *
 * @author Boss
 */
public class StudentWin extends javax.swing.JFrame {

    Student student;
    ArrayList<Section> sectionList = null;
    
    /**
     * Creates new form StudentWin
     */
    public StudentWin(Student st) {
        initComponents();
        this.student = st;
        jLabel1.setText("Welcom "+student.getfName()+" "+student.getlName()+"!");
        //display all schedules by default when login
        DBmanager dbManager = DBmanager.getInstance();
            DefaultTableModel model = null;
            model = dbManager.getData("SELECT `sessionNumber`, sessions.`courseName`, `units`, `majorName`, `semester`, `startTime`, `endTime`, `buildingName`, `roomNumber`, `lastName` FROM sessions INNER JOIN courses ON sessions.courseName = courses.courseName LEFT OUTER JOIN professors ON sessions.professorId=professors.id WHERE sessionNumber IN ( SELECT `sessionId` FROM schedules WHERE studentid = "+student.getid()+" )");

            if(model==null || model.getRowCount()==0)
                System.out.println("Error");
            else
                jTable1.setModel(model);

    }

    public void updateView()
    {
        DBmanager dbManager = DBmanager.getInstance();
        DefaultTableModel model = null;
        model = dbManager.getData("SELECT `sessionNumber`, sessions.`courseName`, `units`, `majorName`, `semester`, `startTime`, `endTime`, `buildingName`, `roomNumber`, `lastName` FROM sessions INNER JOIN courses ON sessions.courseName = courses.courseName LEFT OUTER JOIN professors ON sessions.professorId=professors.id WHERE sessionNumber IN ( SELECT `sessionId` FROM schedules WHERE studentid = "+student.getid()+" AND current = 1)");
       
        if(model==null || model.getRowCount()==0)
            System.out.println("Error");
        else
            jTable1.setModel(model);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        addErrorlabel = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        errLabelDrop = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel2.setText("Search Course name:");

        jButton1.setText("Search");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jButton2.setText("Add");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Drop");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "all schedules", "current schedule" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 637, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(39, 39, 39)
                        .addComponent(errLabelDrop, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(addErrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 368, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(134, 134, 134)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(45, 45, 45)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField1)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(242, 242, 242))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(errLabelDrop, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1)
                            .addComponent(jButton2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addErrorlabel, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 518, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(80, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /*Search Button*/
    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here:
        addErrorlabel.setText("");
        DBmanager dbManager = DBmanager.getInstance();
        DefaultTableModel model = null;
        model = dbManager.getData("SELECT * FROM sessions WHERE courseName = '"+jTextField1.getText()+"'");
        if(model==null || model.getRowCount()==0)
            addErrorlabel.setText("No results found! There is no session for this course.");
        else
            jTable2.setModel(model);
    }//GEN-LAST:event_jButton1MouseClicked

    /*Add Button*/
    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        DBmanager dbManager = DBmanager.getInstance();
        addErrorlabel.setText("");
        if(jComboBox1.getSelectedItem().toString().equals("current schedule"))
        {
            int units = 0;
            for(int i = 0; i<jTable1.getRowCount(); i++)
            {
                units+= Integer.parseInt(jTable1.getValueAt(i, 2).toString());
           }
            
            if(jTable2.getSelectedRow()<0)
            addErrorlabel.setText("Error: Nothing is selected to add!");
            else
            {
                if(student.gettuitionStatus())
                {
                    String Sessionid = jTable2.getValueAt(jTable2.getSelectedRow(), 0).toString();
                    Course course = dbManager.getCourse(Integer.parseInt(Sessionid));
                    units+=course.getUnits();
                    System.out.println("total units: "+units);
                    if(units<=20)
                    {
                        boolean success = dbManager.studentAddCourse(student.getid(), Integer.parseInt(Sessionid));
                        if(success)
                        {
                            addErrorlabel.setText("Course successfully added!");
                            updateView();
                        }
                    }
                    else
                        addErrorlabel.setText("Invalid action. You cannot add more than 20 units!");

                }
                else
                    addErrorlabel.setText("Error: Tuition Not Paid!");
            }
        }
        else
        {
            addErrorlabel.setText("Invalid action. You can only add to your current schedule!");
        }
    }//GEN-LAST:event_jButton2MouseClicked

    /*Drop*/
    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
        errLabelDrop.setText("");
        if(jComboBox1.getSelectedItem().toString().equals("current schedule"))
        {
            String query = "DELETE FROM schedules"+
                " WHERE `"+"sessionId"+"` = '"+jTable1.getValueAt(jTable1.getSelectedRow(), 0).toString()+"'";
            System.out.println(query);
            String message = DBmanager.getInstance().update(query);
            updateView();
        }
        else
        {
            errLabelDrop.setText("Invalid action. You can only drop from your current schedule!");
        }
    }//GEN-LAST:event_jButton3MouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        // TODO add your handling code here:
        errLabelDrop.setText("");
        addErrorlabel.setText("");
        if(jComboBox1.getSelectedItem().toString().equals("current schedule"))
            updateView();
        else if(jComboBox1.getSelectedItem().toString().equals("all schedules"))
        {
            DBmanager dbManager = DBmanager.getInstance();
            DefaultTableModel model = null;
            model = dbManager.getData("SELECT `sessionNumber`, sessions.`courseName`, `units`, `majorName`, `semester`, `startTime`, `endTime`, `buildingName`, `roomNumber`, `lastName` FROM sessions INNER JOIN courses ON sessions.courseName = courses.courseName LEFT OUTER JOIN professors ON sessions.professorId=professors.id WHERE sessionNumber IN ( SELECT `sessionId` FROM schedules WHERE studentid = "+student.getid()+" )");

            if(model==null || model.getRowCount()==0)
                System.out.println("Error");
            else
                jTable1.setModel(model);
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    /**
     * @param args the command line arguments
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(StudentWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(StudentWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(StudentWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(StudentWin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
////                new StudentWin().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addErrorlabel;
    private javax.swing.JLabel errLabelDrop;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
